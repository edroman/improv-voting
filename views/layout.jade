doctype 5
html(xmlns="http://www.w3.org/1999/xhtml",xmlns:fb="https://www.facebook.com/2008/fbml")
	head
		title A Tall Tale
		link(rel='stylesheet', href='/stylesheets/style.css')
	body
	center
		h1
			a(href='/') A Tall Tale
		a(href='/') Home
		&nbsp
		&nbsp
		&nbsp
		a(href='/leaderboard') Current leaderboard
		&nbsp
		&nbsp
		&nbsp
		- if (typeof currentUser != 'undefined')
			a(href='/mystories') My stories
			&nbsp
			&nbsp
			&nbsp
		a(href='/rules') Contest rules
		&nbsp
		&nbsp
		&nbsp
		- if (typeof currentUser == 'undefined')
			a(href='/auth/facebook') Sign In
		- else
			a(href='/logout') Logout
		br
		h3 Fun short stories told by two people, one sentence at a time
		p The top voted story each week WINS a new iPhone 5 or iPad Mini (your choice)! 
		p Last week's winner:
		img('src=/images/ed.jpg')
		br
		b Ed Roman 
		p This week's winner will be chosen in #{7 - new Date().getDay()} days.
		p
			a(href='https://itunes.apple.com/') Tell your own stories with friends - click here to download "A Tall Tale" iPhone app!
		- if (typeof message != 'undefined')
			p
				b
					= message
		p

		// <script language="JavaScript" type="text/javascript" src="/js/jquery-1.2.6.min.js"></script>
		// <script language="JavaScript" type="text/javascript" src="/js/jquery-ui-personalized-1.5.2.packed.js"></script>
		script(type='text/javascript',src='http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js')
		#fb-root
		script(type='text/javascript')
			alert("Beginning load for social APIs");

			// Once the Facebook SDK is fully loaded, this callback will be invoked
			window.fbAsyncInit = function()
			{
				alert("Calling FB.init()");
				FB.init({
					appId: "250634021702621",
					status: true,
					cookie: true,
					channelUrl: ((process.env.IP || 'http://edro.no-ip.org:3000') + '/channel.html'),
					// oauth: true
				});
				
				// Associate the method below whenever we receive a Facebook status change
				FB.Event.subscribe('auth.statusChange', handleStatusChange);
				
				// NOTE: Can subscribe to other notifications here too, such as when the user
				// logs in/out, sends a message, adds a comment, or likes something.
				// See https://developers.facebook.com/docs/reference/javascript/FB.Event.subscribe/
			};

			// Callback for once we are logged in and authorized
			function handleStatusChange(response) {
				// Mark us as connected / not_connected
				document.body.className = response.authResponse ? 'connected' : 'not_connected';
				
				// Could theoretically use this for debugging
				if (response.authResponse)
				{
					alert("Received status change response: " + response.status);
				}
			};

			// Declare a generic SDK loading function
			var loadSDK = function(doc, script, id, src)
			{
				var js, fjs = doc.getElementsByTagName(script)[0];
				if (!doc.getElementById(id))
				{ 
					js = doc.createElement(script);
					js.id = id;
					js.src = src;
					js.async = true;						// Makes SDK load asynchronously
					fjs.parentNode.insertBefore(js,fjs);
				}
			};

			// Twitter SDK loading
			// alert("Loading Twitter SDK");
			// loadSDK(document, 'script', 'twitter-wjs', 'https://platform.twitter.com/widgets.js');

			// Facebook SDK loading
			// Note: From the moment you pass parameters like #xfbml=1&appId=X, the FB SDK will auto-init itself, but we want to control that,
			// so we don't pass parameters
			alert("Loading Facebook SDK");
			loadSDK(document, 'script', 'facebook-jssdk', '//connect.facebook.net/en_US/all.js');

			// Facebook callback - useful for doing stuff after Facebook returns.  Passed as parameter to API calls later.
			var myResponse;
			function callback(response)
			{
				alert("Received a callback");
				if (response)
				{
					// For debugging - can query myResponse via JavaScript console
					myResponse = response;
					
					if (response.post_id)
					{
						alert('Post was published.');
					}
					else
					{
						// Else we are expecting a Response Body Object in JSON, so decode this
						var responseBody = JSON.parse(response.body);
					
						// If the Response Body includes an Error Object, handle the Error
						if(responseBody.error)
						{
							alert(responseBody.error.message);
						}
						// Else handle the data Object
						else
						{
							alert('Post was not published.');
						}
					}
				}
			}
	
			// All API calls go here
			$(document).ready(function ()
			{				
				alert("Defining API calls");

				// Post to your wall
				$('#post_wall').click(function ()
				{
					alert("Calling post_wall");
					FB.ui(
						{
							method: 'feed',
							// useful if we want the callback to go to our site, rather than the JavaScript, so we can log an event
							redirect_uri: (process.env.IP || 'http://edro.no-ip.org:3000'),
							link: (process.env.IP || 'http://edro.no-ip.org:3000') + '/stories/{game.id}'),
							picture: 'http://fbrell.com/f8.jpg',
							name: 'Check out this tall tale!',
							caption: 'Made by {game.get("creator").get("name")} and {game.get("invitee").get("name")} on http://www.ATallTale.com',
							description: '<todo: preview>'
							// display: 'popup'
						},
						callback
					);
					return false;
				});
			});
		block content
			br
			p
